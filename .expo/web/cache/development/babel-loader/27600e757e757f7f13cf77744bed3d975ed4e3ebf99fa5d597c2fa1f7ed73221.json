{"ast":null,"code":"import { API } from \"../Services/base\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport { homeReducers, themeReducers } from \"./reducers\";\nvar reducers = combineReducers({\n  api: API.reducer,\n  theme: themeReducers,\n  home: homeReducers\n});\nvar persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  whitelist: [\"theme\"]\n};\nvar persistedReducer = persistReducer(persistConfig, reducers);\nvar store = configureStore({\n  reducer: persistedReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    var middlewares = getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    }).concat(API.middleware);\n    return middlewares;\n  }\n});\nvar persistor = persistStore(store);\nsetupListeners(store.dispatch);\nexport { store, persistor };","map":{"version":3,"names":["API","AsyncStorage","configureStore","combineReducers","setupListeners","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","homeReducers","themeReducers","reducers","api","reducer","theme","home","persistConfig","key","storage","whitelist","persistedReducer","store","middleware","getDefaultMiddleware","middlewares","serializableCheck","ignoredActions","concat","persistor","dispatch"],"sources":["E:/Project/Mobile/react-native-expo-redux-template/src/Store/index.ts"],"sourcesContent":["import { API } from \"@/Services/base\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport { homeReducers, themeReducers } from \"./reducers\";\r\n\r\nconst reducers = combineReducers({\r\n  api: API.reducer,\r\n  theme: themeReducers,\r\n  home: homeReducers,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: AsyncStorage,\r\n  whitelist: [\"theme\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) => {\r\n    const middlewares = getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(API.middleware);\r\n\r\n    // if (__DEV__ && !process.env.JEST_WORKER_ID) {\r\n    //   const createDebugger = require(\"redux-flipper\").default;\r\n    //   middlewares.push(createDebugger());\r\n    // }\r\n\r\n    return middlewares;\r\n  },\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nsetupListeners(store.dispatch);\r\n\r\nexport { store, persistor };\r\n"],"mappings":"AAAA,SAASA,GAAG;AACZ,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SACEC,cAAc,EACdC,YAAY,EACZC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,SAASC,YAAY,EAAEC,aAAa;AAEpC,IAAMC,QAAQ,GAAGZ,eAAe,CAAC;EAC/Ba,GAAG,EAAEhB,GAAG,CAACiB,OAAO;EAChBC,KAAK,EAAEJ,aAAa;EACpBK,IAAI,EAAEN;AACR,CAAC,CAAC;AAEF,IAAMO,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAErB,YAAY;EACrBsB,SAAS,EAAE,CAAC,OAAO;AACrB,CAAC;AAED,IAAMC,gBAAgB,GAAGnB,cAAc,CAACe,aAAa,EAAEL,QAAQ,CAAC;AAEhE,IAAMU,KAAK,GAAGvB,cAAc,CAAC;EAC3Be,OAAO,EAAEO,gBAAgB;EACzBE,UAAU,EAAE,SAAAA,WAACC,oBAAoB,EAAK;IACpC,IAAMC,WAAW,GAAGD,oBAAoB,CAAC;MACvCE,iBAAiB,EAAE;QACjBC,cAAc,EAAE,CAACvB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;MACpE;IACF,CAAC,CAAC,CAACmB,MAAM,CAAC/B,GAAG,CAAC0B,UAAU,CAAC;IAOzB,OAAOE,WAAW;EACpB;AACF,CAAC,CAAC;AAEF,IAAMI,SAAS,GAAG1B,YAAY,CAACmB,KAAK,CAAC;AAErCrB,cAAc,CAACqB,KAAK,CAACQ,QAAQ,CAAC;AAE9B,SAASR,KAAK,EAAEO,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
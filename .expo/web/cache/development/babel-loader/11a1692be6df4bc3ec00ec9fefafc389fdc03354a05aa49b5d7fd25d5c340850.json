{"ast":null,"code":"import { API } from \"../base\";\nvar userApi = API.injectEndpoints({\n  endpoints: function endpoints(build) {\n    return {\n      getUser: build.query({\n        query: function query(id) {\n          return \"users/\" + id;\n        }\n      })\n    };\n  },\n  overrideExisting: true\n});\nvar useLazyGetUserQuery = userApi.useLazyGetUserQuery;\nexport { useLazyGetUserQuery };","map":{"version":3,"names":["API","userApi","injectEndpoints","endpoints","build","getUser","query","id","overrideExisting","useLazyGetUserQuery"],"sources":["E:/Project/Mobile/react-native-expo-redux-template/src/Services/users/index.ts"],"sourcesContent":["import { API } from \"../base\";\r\n\r\nexport interface Geo {\r\n  lat: string;\r\n  lng: string;\r\n}\r\n\r\nexport interface Address {\r\n  city: string;\r\n  geo: Geo;\r\n  street: string;\r\n  suite: string;\r\n  zipcode: string;\r\n}\r\n\r\nexport interface Company {\r\n  bs: string;\r\n  catchPhrase: string;\r\n  name: string;\r\n}\r\n\r\nexport interface User {\r\n  address: Address;\r\n  company: Company;\r\n  email: string;\r\n  id: number;\r\n  name: string;\r\n  phone: string;\r\n  username: string;\r\n  website: string;\r\n}\r\n\r\nconst userApi = API.injectEndpoints({\r\n  endpoints: (build) => ({\r\n    getUser: build.query<User, string>({\r\n      query: (id) => `users/${id}`,\r\n    }),\r\n  }),\r\n  overrideExisting: true,\r\n});\r\n\r\nexport const { useLazyGetUserQuery } = userApi;\r\n"],"mappings":"AAAA,SAASA,GAAG;AAgCZ,IAAMC,OAAO,GAAGD,GAAG,CAACE,eAAe,CAAC;EAClCC,SAAS,EAAE,SAAAA,UAACC,KAAK;IAAA,OAAM;MACrBC,OAAO,EAAED,KAAK,CAACE,KAAK,CAAe;QACjCA,KAAK,EAAE,SAAAA,MAACC,EAAE;UAAA,kBAAcA,EAAE;QAAA;MAC5B,CAAC;IACH,CAAC;EAAA,CAAC;EACFC,gBAAgB,EAAE;AACpB,CAAC,CAAC;AAEK,IAAQC,mBAAmB,GAAKR,OAAO,CAA/BQ,mBAAmB;AAAa,SAAAA,mBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}